#version: '3.9'

services:
  # Aplicação (API)
  app:
    container_name: app
    build: .
    ports:
      - '${API_PORT}:${API_PORT}'
    environment:
      NODE_ENV: ${NODE_ENV}
      API_HOST: ${API_HOST}
      API_PORT: ${API_PORT}
      DB_TYPE: ${DB_TYPE}
      DB_HOST: database
      DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_NAME: ${DB_NAME}
      DB_PORT: ${DB_PORT}
    depends_on:
      - database

  # Banco de dados (PostgreSQL)
  database:
    container_name: database
    image: postgres:12
    ports:
      - '${DB_PORT}:5432'
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

  # pgAdmin para gerenciar o PostgreSQL
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${DB_ADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${DB_PASSWORD}
    ports:
      - '8081:80'
    depends_on:
      - database

  # Banco de dados (MongoDB) - Exemplo comentado
  # mongo:
  #   container_name: mongo
  #   image: mongo:4.4
  #   ports:
  #     - '27017:27017'
  #   environment:
  #     MONGO_INITDB_ROOT_USERNAME: ${DB_USERNAME}
  #     MONGO_INITDB_ROOT_PASSWORD: ${DB_PASSWORD}
  #   volumes:
  #     - mongodata:/data/db

  # Mongo Express (Gerenciador para MongoDB) - Exemplo comentado
  # mongo-express:
  #   container_name: mongo-express
  #   image: mongo-express
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: ${DB_USERNAME}
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: ${DB_PASSWORD}
  #     ME_CONFIG_MONGODB_SERVER: mongo
  #   ports:
  #     - '8082:8081'
  #   depends_on:
  #     - mongo

volumes:
  pgdata: {}
  # mongodata: {}  # Volume para o MongoDB (Comentado)
